#ifndef _SM_MANAGER_H_
#define _SM_MANAGER_H_


#include <stdio.h>
#include <stdlib.h>

#include "CommonData.h"
//#include "VGW_VodStream.h"
//#include "MSI_SMStream.h"
//#include "Advertisement.h"
//#include "Navigation.h"



class Advertisement_Stream ;
	class MSI_SM_Stream ;
	class Navigation_Stream ;
	class VGW_Vod_Stream;





class SM_Manager
{
public:

	SM_Manager();
	~SM_Manager();
	
	bool CleanAllStream();
	bool CleanAllTask();
	bool CleanStream(int iStreamID,char *strUserID=NULL);
	bool CleanTask(ModuleType emodelType);
	

	//下发导航路数及广告流路数
	bool InAdvanceStream(int iNavNum,int iAdverNum);

	bool CheckStreamStatus(ModuleType emodelType);
	bool ResouceRecovery(ModuleType emodelType);
/*	bool CheckVodStream();
	bool CheckNavgationStream();
	bool VODResouceRecovery();
	bool NavResouceRecovery();
*/
	//装载流通道分组
	bool LoadStreamResource();
	bool LoadStreamStatus();
	bool LoadIPQAMInfo();
	bool LoadNetWorkGroup();

	bool AddOneStream(ModuleType emodelType,int iOldStreamID=0);

	bool InitStream();

	int Bind_OneStream(int iStreamid,char *strUserID,char* strToken);
	
	int AddOneVodStream(int iStreamID,char* strUrl,int iFd,char* strSerilno);
	int AddOneNavStream(int iStreamID);

	bool VodStreamOver(int iStreamID);
	
	bool GetTaskStatus();

	bool AddStream2GroupInfo(int iStreamID,int iType);// 1为增加，0为删除

	//bool ChangeStream_Status(int iStreamID,char *strType,char *bind_user)


		//Advertisement_Stream *m_Advertisement;
	Navigation_Stream 	 *m_Navigation;
	Advertisement_Stream *m_Advertiser;
	VGW_Vod_Stream 	*m_VGWVodPlayer;
	MSI_SM_Stream	*m_Msi_SMInter;

	MapStreamResource m_mapStreamResource; //流信息资源表
	MapIPQAMInfo	  m_mapIpqamInfo;  //iPQAM信息表
	MapNetWorkGroup   m_mapNetworkGroup; //网络分组表

	MapStreamStatus   m_mapStreamStatus;  //装载的流数据暂时为所有数据
	MapStreamGroup    m_mapStreamGroup; //流通道分组信息表

	VectorNewNav      m_vecNewNav;
private:
	//输出端口ip
	char m_strdstIP[128];
	int m_iport;
	char m_NavUrl[512];

	//序号
	char m_strSerialNo[128];
	//键值端口
	int m_keyPort;
	int m_s2qPort;



};

#endif
